{
	"info": {
		"_postman_id": "152c3553-3223-4bf7-a53e-52e6940d19f9",
		"name": "vRealize Operations REST API Examples",
		"description": "Description\n\nA collection of vRealize Operations REST APIs organized by use case. This collection is updated frequently and typically using the latest release of vRealize Operations.\n\nAlso now include are some examples for deploying a new vRealize Operations cluster using the CASA API. CASA stands for Cluster and Slice Administration. This API allows you to install and manage your cluster.\n\nAuthorization for the REST APIs are handled via OAuth and an API call is included that will request and store a token for the other REST calls. Be sure to set the included variables for your env. Basic auth is only used by the REST API \"Run First\" call.\n\nAuthentication for CASA uses basic and you will also need to get the master node thumbprint for some of these workflows.\n\nAlso, many of the REST calls have tests, which store additional information as part of a workflow. Be sure to set headers to send/rec payloads in JSON format, as the tests assume this format. Default for vROps API is XML so any post-tests will fail and any pre-tests provide env vars in JSON format.\n\nDocumentation\n\nDocumentation for the APIs can be found on the vROps appliance:\n\n/suite-api for the REST APIs /casa/api-guide.html for the CASA REST APIs\n\nContributors:\n\nJohn Dias, diasj@vmware.com Chris McClanahan, mcclanahanc@vmware.com Brandon Gordon, gbrandon@vmware.com, Kim Bottu @kim_bottu",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authenticate - RUN FIRST",
			"item": [
				{
					"name": "On-Prem RUN FIRST - Get vR Ops Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"bearerToken\", \"vRealizeOpsToken \" + jsonData.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\" : \"{{user}}\",\r\n  \"authSource\" : \"{{authSource}}\",\r\n  \"password\" : \"{{pass}}\"\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/auth/token/acquire",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"auth",
								"token",
								"acquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cloud RUN FIRST Generate CSP Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"bearerToken\", \"CSPToken \" + jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"name": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Accept",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refresh_token",
									"value": "{{refreshToken}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://console.cloud.vmware.com/csp/gateway/am/api/auth/api-tokens/authorize",
							"protocol": "https",
							"host": [
								"console",
								"cloud",
								"vmware",
								"com"
							],
							"path": [
								"csp",
								"gateway",
								"am",
								"api",
								"auth",
								"api-tokens",
								"authorize"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Full Alert Info",
			"item": [
				{
					"name": "Query Alerts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var r = jsonData.alerts.reduce(function(c, a) {",
									"    if ( c[a.alertDefinitionName] ) {",
									"            c[a.alertDefinitionName] += 1;",
									"    } else {",
									"            c[a.alertDefinitionName] = 1;",
									"    }",
									"    return c;",
									"}, {});",
									"",
									"tests[JSON.stringify(r)] = true;"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resource-query\": {\n       \"resourceKind\": [\"virtualmachine\"]\n        },\n    \"activeOnly\": \"True\",\n    \"alertCriticality\": [\"CRITICAL\",\"IMMEDIATE\",\"WARNING\",\"INFORMATION\"],\n    \"alertImpact\": [\"risk\"]\n  \n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/alerts/query",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"alerts",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alert",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"resourceId\", jsonData.resourceId);",
									"postman.setEnvironmentVariable(\"alertDefinitionId\", jsonData.alertDefinitionId);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/alerts/7c2a4f9a-fd04-4300-b85c-cda555782e86",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"alerts",
								"7c2a4f9a-fd04-4300-b85c-cda555782e86"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alert Definition",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									"postman.setEnvironmentVariable(\"alertSymptoms\", JSON.stringify(jsonData.states[0][\"base-symptom-set\"].symptomDefinitionIds));",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/alertdefinitions/{{alertDefinitionId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"alertdefinitions",
								"{{alertDefinitionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Impacted Resource Symptoms",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var resourceSymptoms = [];",
									"",
									"for (var i in jsonData.symptom) {",
									"    resourceSymptoms.push(jsonData.symptom[i].symptomDefinitionId);",
									"}",
									"",
									"postman.setEnvironmentVariable(\"resourceSymptoms\", JSON.stringify(resourceSymptoms));",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/symptoms?resourceId={{resourceId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"symptoms"
							],
							"query": [
								{
									"key": "resourceId",
									"value": "{{resourceId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alert Contributing Symptoms",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "applicaiton/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/alerts/contributingsymptoms?id=3a4851be-bcc3-4872-a4ea-8bb926f48850",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"alerts",
								"contributingsymptoms"
							],
							"query": [
								{
									"key": "id",
									"value": "3a4851be-bcc3-4872-a4ea-8bb926f48850"
								}
							]
						},
						"description": "Added in vROps 6.7"
					},
					"response": []
				},
				{
					"name": "Update an Alert Definition with Multiple Symptom Sets",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"AlertDefinition-1e94bdb0-3457-49c8-8abf-ff2324eb11d7\",\n    \"name\": \"Autoscale Web Traffic Changed\",\n    \"adapterKindKey\": \"VMWARE\",\n    \"resourceKindKey\": \"VirtualMachine\",\n    \"waitCycles\": 1,\n    \"cancelCycles\": 1,\n    \"type\": 15,\n    \"subType\": 19,\n    \"states\": [\n        {\n            \"severity\": \"AUTO\",\n            \"base-symptom-set\": {\n                \"type\": \"SYMPTOM_SET_COMPOSITE\",\n                \"operator\": \"AND\",\n                \"symptom-sets\": [\n                    {\n                        \"type\": \"SYMPTOM_SET\",\n                        \"relation\": \"SELF\",\n                        \"aggregation\": \"ANY\",\n                        \"symptomSetOperator\": \"AND\",\n                        \"symptomDefinitionIds\": [\n                            \"SymptomDefinition-a0fed9b7-d4f4-4e7d-ba39-f91d6a2bf17e\"\n                        ]\n                    },\n                    {\n                        \"type\": \"SYMPTOM_SET\",\n                        \"relation\": \"PARENT\",\n                        \"symptomSetOperator\": \"OR\",\n                        \"aggregation\": \"ANY\",\n                        \"symptomDefinitionIds\": [\n                            \"SymptomDefinition-992eefd8-e9bb-45ff-a788-2072e67120ab\",\n                            \"SymptomDefinition-56d26c37-b852-4df7-841c-23dc97be93dc\"\n                        ]\n                    }\n                ]\n            },\n            \"impact\": {\n                \"impactType\": \"BADGE\",\n                \"detail\": \"health\"\n            }\n            \n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/alertdefinitions/?AlertDefinition-1e94bdb0-3457-49c8-8abf-ff2324eb11d7=",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"alertdefinitions",
								""
							],
							"query": [
								{
									"key": "AlertDefinition-1e94bdb0-3457-49c8-8abf-ff2324eb11d7",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Endpoint Operations",
			"item": [
				{
					"name": "Agent Management",
					"item": [
						{
							"name": "Get All EP Ops Agents",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources?resourceKind=EP Ops Agent&",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources"
									],
									"query": [
										{
											"key": "resourceKind",
											"value": "EP Ops Agent"
										},
										{
											"key": null,
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get EP Ops Agent ID by FQDN",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									}
								],
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources?adapterKind=EP Ops Adapter&propertyName=fqdn&propertyValue=DC1.mylab.dias",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources"
									],
									"query": [
										{
											"key": "adapterKind",
											"value": "EP Ops Adapter"
										},
										{
											"key": "propertyName",
											"value": "fqdn"
										},
										{
											"key": "propertyValue",
											"value": "DC1.mylab.dias"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update EP Ops Agent",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "X-vRealizeOps-API-use-unsupported",
										"value": "true"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"agentId\" : \"1451538219583-2983685990625162095-598612646798980120\",\r\n  \"fileLocation\" : \"bundles/6.2.1\",\r\n  \"agentBundleFile\" : \"agent-x86-64-win-6.2.1.zip\"\r\n}"
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/internal/agent/upgrade",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"internal",
										"agent",
										"upgrade"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Agent Status on Upgrade",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/adapterkinds/EP Ops Adapter/resourcekinds/EP Ops Agent/resources?identifiers[agentID]=1432528639235-6190445699790943031-2415937788285910890",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"adapterkinds",
										"EP Ops Adapter",
										"resourcekinds",
										"EP Ops Agent",
										"resources"
									],
									"query": [
										{
											"key": "identifiers[agentID]",
											"value": "1432528639235-6190445699790943031-2415937788285910890"
										}
									]
								},
								"description": "Need agent ID (token)"
							},
							"response": []
						}
					]
				},
				{
					"name": "Monitors",
					"item": [
						{
							"name": "Get EP Ops Agent by Name and Save",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"// If the env variables are not populated then your query returned 0 or more than 1 result - refine or correct your query",
											"",
											"if (jsonData.pageInfo.totalCount == 1) {",
											"    postman.setEnvironmentVariable(\"adapterInstanceId\", jsonData.resourceList[0].resourceStatusStates[0].adapterInstanceId);",
											"    postman.setEnvironmentVariable(\"agentResourceId\", jsonData.resourceList[0].identifier);",
											"    for (var i = 0; i < jsonData.resourceList[0].resourceKey.resourceIdentifiers.length; i++){",
											"        if (jsonData.resourceList[0].resourceKey.resourceIdentifiers[i].identifierType.name == \"agentID\") {",
											"            postman.setEnvironmentVariable(\"agentID\", jsonData.resourceList[0].resourceKey.resourceIdentifiers[i].value);",
											"        }",
											"    }",
											"}",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources?resourceKind=EP Ops Agent&name=IIS-",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources"
									],
									"query": [
										{
											"key": "resourceKind",
											"value": "EP Ops Agent"
										},
										{
											"key": "name",
											"value": "IIS-"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create ResourceKind of AdapterKind",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"// If this returns some number of resources other than 1, something is wrong with the relationships!",
											"",
											"if (jsonData.pageInfo.totalCount == 1) {",
											"    for (var i = 0; i < jsonData.resourceList.length; i++) {",
											"        if (jsonData.resourceList[i].resourceKey.resourceKindKey == \"Windows\" || jsonData.resourceList[i].resourceKey.resourceKindKey == \"Linux\") {",
											"            postman.setEnvironmentVariable(\"osResourceId\", jsonData.resourceList[i].identifier);",
											"        }",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources/{{agentResourceId}}/relationships",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources",
										"{{agentResourceId}}",
										"relationships"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an EPOPS ICMP Monitor Resource",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"epopsMonitorResourceId\", jsonData.identifier);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n      \"description\": \"\",\n      \"creationTime\": null,\n      \"resourceKey\": {\n        \"name\": \"vc-east-icmp\",\n        \"adapterKindKey\": \"EP Ops Adapter\",\n        \"resourceKindKey\": \"ICMP Check\",\n        \"resourceIdentifiers\": [\n          {\n            \"identifierType\": {\n              \"name\": \"agentID\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"{{agentID}}\"\n            },\n          {\n            \"identifierType\": {\n              \"name\": \"discoveryMode\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"MANUAL\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"hostname\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"msbu-vc-east.mgmt.local\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"monitoredResourceID\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": true\n            },\n            \"value\": \"vc-west\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"Override_agent_configuration_data\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"0\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"parentID\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": true\n            },\n            \"value\": \"|{{agentID}}\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"sotimeout\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"10\"\n          }\n        ]\n      }\n}"
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{adapterInstanceId}}",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources",
										"adapters",
										"{{adapterInstanceId}}"
									]
								}
							},
							"response": [
								{
									"name": "Create an EPOPS ICMP Monitor Resource",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{bearerToken}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n      \"description\": \"\",\n      \"creationTime\": null,\n      \"resourceKey\": {\n        \"name\": \"vc-east-icmp\",\n        \"adapterKindKey\": \"EP Ops Adapter\",\n        \"resourceKindKey\": \"ICMP Check\",\n        \"resourceIdentifiers\": [\n          {\n            \"identifierType\": {\n              \"name\": \"agentID\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"{{agentID}}\"\n            },\n          {\n            \"identifierType\": {\n              \"name\": \"discoveryMode\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"MANUAL\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"hostname\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"msbu-vc-east.mgmt.local\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"monitoredResourceID\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": true\n            },\n            \"value\": \"vc-west\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"Override_agent_configuration_data\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"0\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"parentID\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": true\n            },\n            \"value\": \"|{{agentID}}\"\n          },\n          {\n            \"identifierType\": {\n              \"name\": \"sotimeout\",\n              \"dataType\": \"STRING\",\n              \"isPartOfUniqueness\": false\n            },\n            \"value\": \"10\"\n          }\n        ]\n      }\n}"
										},
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{adapterInstanceId}}",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"resources",
												"adapters",
												"{{adapterInstanceId}}"
											]
										}
									},
									"status": "201",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*",
											"name": "Access-Control-Allow-Origin",
											"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate",
											"name": "Cache-Control",
											"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Oct 2017 18:40:45 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "Expires",
											"value": "0",
											"name": "Expires",
											"description": "Gives the date/time after which the response is considered stale"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=15, max=100",
											"name": "Keep-Alive",
											"description": "Custom header"
										},
										{
											"key": "Pragma",
											"value": "no-cache",
											"name": "Pragma",
											"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain."
										},
										{
											"key": "Server",
											"value": "Apache",
											"name": "Server",
											"description": "A name for the server"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains",
											"name": "Strict-Transport-Security",
											"description": "A HSTS Policy informing the HTTP client how long to cache the HTTPS only policy and whether this applies to subdomains."
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked",
											"name": "Transfer-Encoding",
											"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff",
											"name": "X-Content-Type-Options",
											"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY",
											"name": "X-Frame-Options",
											"description": "Clickjacking protection: \"deny\" - no rendering within a frame, \"sameorigin\" - no rendering if origin mismatch"
										},
										{
											"key": "X-Request-ID",
											"value": "CBbxtzHfLCXqZ0R5s2DtCzeKbDEOHvce",
											"name": "X-Request-ID",
											"description": "Custom header"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block",
											"name": "X-XSS-Protection",
											"description": "Cross-site scripting (XSS) filter"
										}
									],
									"cookie": [],
									"body": "{\"description\":\"\",\"resourceKey\":{\"name\":\"vc-west\",\"adapterKindKey\":\"EP Ops Adapter\",\"resourceKindKey\":\"ICMP Check\",\"resourceIdentifiers\":[{\"identifierType\":{\"name\":\"agentID\",\"dataType\":\"STRING\",\"isPartOfUniqueness\":false},\"value\":\"1477442044192-8820317972786024825-462474138079878128\"},{\"identifierType\":{\"name\":\"discoveryMode\",\"dataType\":\"STRING\",\"isPartOfUniqueness\":false},\"value\":\"MANUAL\"},{\"identifierType\":{\"name\":\"hostname\",\"dataType\":\"STRING\",\"isPartOfUniqueness\":false},\"value\":\"msbu-vc-west.mgmt.local\"},{\"identifierType\":{\"name\":\"monitoredResourceID\",\"dataType\":\"STRING\",\"isPartOfUniqueness\":true},\"value\":\"vc-west ICMP Monitor\"},{\"identifierType\":{\"name\":\"Override_agent_configuration_data\",\"dataType\":\"STRING\",\"isPartOfUniqueness\":false},\"value\":\"0\"},{\"identifierType\":{\"name\":\"parentID\",\"dataType\":\"STRING\",\"isPartOfUniqueness\":true},\"value\":\"|1477442044192-8820317972786024825-462474138079878128\"},{\"identifierType\":{\"name\":\"sotimeout\",\"dataType\":\"STRING\",\"isPartOfUniqueness\":false},\"value\":\"10\"}]},\"resourceStatusStates\":[],\"dtEnabled\":true,\"badges\":[],\"relatedResources\":[],\"links\":[{\"href\":\"/suite-api/api/resources/27eef2d8-84c6-4296-981b-8e97778c78f1\",\"rel\":\"SELF\",\"name\":\"linkToSelf\"},{\"href\":\"/suite-api/api/resources/27eef2d8-84c6-4296-981b-8e97778c78f1/relationships\",\"rel\":\"RELATED\",\"name\":\"relationsOfResource\"},{\"href\":\"/suite-api/api/resources/27eef2d8-84c6-4296-981b-8e97778c78f1/properties\",\"rel\":\"RELATED\",\"name\":\"propertiesOfResource\"},{\"href\":\"/suite-api/api/alerts?resourceId=27eef2d8-84c6-4296-981b-8e97778c78f1\",\"rel\":\"RELATED\",\"name\":\"alertsOfResource\"},{\"href\":\"/suite-api/api/symptoms?resourceId=27eef2d8-84c6-4296-981b-8e97778c78f1\",\"rel\":\"RELATED\",\"name\":\"symptomsOfResource\"},{\"href\":\"/suite-api/api/resources/27eef2d8-84c6-4296-981b-8e97778c78f1/statkeys\",\"rel\":\"RELATED\",\"name\":\"statKeysOfResource\"},{\"href\":\"/suite-api/api/resources/27eef2d8-84c6-4296-981b-8e97778c78f1/stats/latest\",\"rel\":\"RELATED\",\"name\":\"latestStatsOfResource\"},{\"href\":\"/suite-api/api/resources/27eef2d8-84c6-4296-981b-8e97778c78f1/properties\",\"rel\":\"RELATED\",\"name\":\"latestPropertiesOfResource\"},{\"href\":\"/suite-api/api/credentials/\",\"rel\":\"RELATED\",\"name\":\"credentialsOfResource\"}],\"identifier\":\"27eef2d8-84c6-4296-981b-8e97778c78f1\"}"
								}
							]
						},
						{
							"name": "Create an EPOPS Windows Service Monitor Resource",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"epopsMonitorResourceId\", jsonData.identifier);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"Windows Time Service Monitor\",\r\n    \"creationTime\": null,\r\n    \"resourceKey\": {\r\n        \"name\": \"Windows Time Service\",\r\n        \"adapterKindKey\": \"EP Ops Adapter\",\r\n        \"resourceKindKey\": \"Windows Service\",\r\n        \"resourceIdentifiers\": [\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"agentID\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": false\r\n                },\r\n                \"value\": \"{{agentID}}\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"discoveryMode\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": false\r\n                },\r\n                \"value\": \"MANUAL\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"monitoredResourceID\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": true\r\n                },\r\n                \"value\": \"Windows Time Service\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"Override_agent_configuration_data\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": false\r\n                },\r\n                \"value\": \"0\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"parentID\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": true\r\n                },\r\n                \"value\": \"|{{agentID}}\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"service_name\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": false\r\n                },\r\n                \"value\": \"W32Time\"\r\n            }\r\n        ]\r\n    },\r\n    \"identifier\": null\r\n}"
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{adapterInstanceId}}",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources",
										"adapters",
										"{{adapterInstanceId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an EPOPS Unix MultiProcess Monitor Resource",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"epopsMonitorResourceId\", jsonData.identifier);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"VMTools\",\r\n    \"creationTime\": null,\r\n    \"resourceKey\": {\r\n        \"name\": \"vmtoolsd\",\r\n        \"adapterKindKey\": \"EP Ops Adapter\",\r\n        \"resourceKindKey\": \"MultiProcess\",\r\n        \"resourceIdentifiers\": [\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"agentID\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": false\r\n                },\r\n                \"value\": \"{{agentID}}\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"discoveryMode\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": false\r\n                },\r\n                \"value\": \"MANUAL\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"monitoredResourceID\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": true\r\n                },\r\n                \"value\": \"VMtools\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"Override_agent_configuration_data\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": false\r\n                },\r\n                \"value\": \"0\"\r\n            },\r\n            {\r\n                \"identifierType\": {\r\n                    \"name\": \"parentID\",\r\n                    \"dataType\": \"STRING\",\r\n                    \"isPartOfUniqueness\": true\r\n                },\r\n                \"value\": \"|{{agentID}}\"\r\n            },\r\n                {\r\n                    \"identifierType\": {\r\n                        \"name\": \"process.query\",\r\n                        \"dataType\": \"STRING\",\r\n                        \"isPartOfUniqueness\": false\r\n                    },\r\n                    \"value\": \"State.Name.eq=vmtoolsd\"\r\n                    \r\n            }\r\n        ]\r\n    },\r\n    \"identifier\": null\r\n}"
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{adapterInstanceId}}",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources",
										"adapters",
										"{{adapterInstanceId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Child Resource to a Resource",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"uuids\" : [\"{{epopsMonitorResourceId}}\"]\n}"
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources/{{osResourceId}}/relationships/children",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources",
										"{{osResourceId}}",
										"relationships",
										"children"
									]
								},
								"description": "This operation adds a child resource to a resource.  \n\nAPI documentation states that POST is additive while PUT is destructive (i.e. overwites existing relationships).\n\nJSON body includes an array of child objects to add.  \n\nThe call does not provide a lot of detail for failure, but it seems\nthat if you have an invalid UUID for a child or the child is already related\nthen it will fail with 400.\n\n204 is a successful call."
							},
							"response": []
						},
						{
							"name": "Start Monitoring a Resource",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"// cleaning up environment",
											"",
											"postman.environment.clear(\"adapterInstanceId\");",
											"postman.environment.clear(\"agentID\");",
											"postman.environment.clear(\"agentResourceId\");",
											"postman.environment.clear(\"epopsMonitorResourceId\");",
											"postman.environment.clear(\"osResourceId\");"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "applicaiton/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/resources/{{epopsMonitorResourceId}}/monitoringstate/start",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"resources",
										"{{epopsMonitorResourceId}}",
										"monitoringstate",
										"start"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Internal API Calls",
			"item": [
				{
					"name": "Get Custom Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "X-vRealizeOps-API-use-unsupported",
								"value": "true"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/internal/resources/groups",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"internal",
								"resources",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Custom Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "X-vRealizeOps-API-use-unsupported",
								"value": "true"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n      \"resourceKey\": {\n        \"name\": \"test group 100\",\n        \"adapterKindKey\": \"Container\",\n        \"resourceKindKey\": \"Function\",\n        \"resourceIdentifiers\": []\n      },\n      \"membershipDefinition\": {\n        \"includedResources\": [],\n        \"excludedResources\": [],\n        \"rules\" : [ {\n      \"resourceKindKey\" : {\n        \"resourceKind\" : \"VirtualMachine\",\n        \"adapterKind\" : \"VMWARE\"\n      },\n      \"attributeRules\" : [],\n      \"resourceNameRules\" : [ {\n        \"name\" : \"lnx\",\n        \"compareOperator\" : \"CONTAINS\"\n        } ],\n      \"relationshipRules\" : [],\n      \"others\" : [],\n      \"otherAttributes\" : {\n      }\n        }]\n      } \n    }"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/internal/resources/groups",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"internal",
								"resources",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable Basic Auth",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-vRealizeOps-API-use-unsupported",
								"value": "true",
								"type": "text",
								"name": "X-vRealizeOps-API-use-unsupported"
							},
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/internal/auth/basic?basicAuth=true",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"internal",
								"auth",
								"basic"
							],
							"query": [
								{
									"key": "basicAuth",
									"value": "true"
								}
							]
						},
						"description": "In 8.1 basicAuth is disabled by default.  If you have scripts that still use basicAuth you should update them.  However, if you need basicAuth in the meanwhile you can re-enable it.  \n\nIt is strongly advised to update your scripts to use tokenAuth, as this capability will be removed in a future release."
					},
					"response": []
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Get Report Definitions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/reportdefinitions",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"reportdefinitions"
							]
						},
						"description": "Gets all - to get a single report ID, just add /<report def id>\n"
					},
					"response": []
				},
				{
					"name": "Generate a report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"resourceId\" : \"24f55311-3d86-41fd-9c73-1c4c0e0dcbb6\",\r\n  \"reportDefinitionId\" : \"97d19754-0ad3-4de1-b35b-d8ad5d07be24\",\r\n  \"traversalSpec\" :       {\r\n        \"name\": \"vSphere Hosts and Clusters\",\r\n        \"description\": \"Enables view of resources imported from vCenter like Clusters, Hosts, VMs and ResourcePools\",\r\n        \"rootAdapterKindKey\": \"VMWARE\",\r\n        \"rootResourceKindKey\": \"vSphere World\",\r\n        \"adapterInstanceAssociation\": false\r\n  },\r\n  \"others\" : [ ],\r\n  \"otherAttributes\" : {\r\n  },\r\n  \"id\" : null\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/reports",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"reports"
							]
						},
						"description": "You will need to update several items in the body such as:\n  - ID of resource you wish to run this report on\n  - ID of the report you wish to run\n  - Traversal Spec for the report (you can get this from the API query\n\"Get Report Definitions\", the travesal spec must match the resource type.\n"
					},
					"response": []
				},
				{
					"name": "Get Generated Reports",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/reports",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"reports"
							]
						},
						"description": "You can check status of report runs this way.\nTo get a specific generated report add /<report id> \n"
					},
					"response": []
				},
				{
					"name": "Download Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/pdf"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/reports/be9097f7-0c8c-4a33-a855-faafb6f03a1d/download?format=CSV",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"reports",
								"be9097f7-0c8c-4a33-a855-faafb6f03a1d",
								"download"
							],
							"query": [
								{
									"key": "format",
									"value": "CSV"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Manage Adapters",
			"item": [
				{
					"name": "Get Adapter Types (Kinds)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapterkinds",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapterkinds"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Adapter Instances ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get An Adapter Instance(s) of Type (Kind)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters?adapterKindKey=VMWARE",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							],
							"query": [
								{
									"key": "adapterKindKey",
									"value": "VMWARE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a vCenter Adapter Instance",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\" : \"Santa Clara\",\r\n  \"description\" : \"\",\r\n  \"collectorId\" : \"1\",\r\n  \"adapterKindKey\" : \"VMWARE\",\r\n  \"resourceIdentifiers\" : [ {\r\n    \"name\" : \"AUTODISCOVERY\",\r\n    \"value\" : \"true\"\r\n  }, {\r\n    \"name\" : \"PROCESSCHANGEEVENTS\",\r\n    \"value\" : \"true\"\r\n  }, {\r\n    \"name\" : \"VCURL\",\r\n    \"value\" : \"https://sc2vc01.cmbu.local/sdk\"\r\n  } ],\r\n  \"credential\" : {\r\n    \"id\" : null,\r\n    \"name\" : \"sc2vc01\",\r\n    \"adapterKindKey\" : \"VMWARE\",\r\n    \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\r\n    \"fields\" : [ {\r\n      \"name\" : \"USER\",\r\n      \"value\" : \"vropsro@cmbu.local\"\r\n    }, {\r\n      \"name\" : \"PASSWORD\",\r\n      \"value\" : \"VMware1!\"\r\n    } ],\r\n    \"others\" : [ ],\r\n    \"otherAttributes\" : {\r\n    }\r\n  },\r\n  \"adapter-certificates\" : {\r\n    \"thumbprint:\"\r\n  }\r\n  \"others\" : [ ],\r\n  \"otherAttributes\" : {\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						},
						"description": "Be sure to check values in the JSON body for credentials.\nAlso note you will need to start the adapter using \"Star an adapter instance\" \nafter creation using the UUID from the response.\n\nIf you aren't using a CA, the certificate will have to be added via the UI\nI do not know of a way to do this via the REST API"
					},
					"response": []
				},
				{
					"name": "Create a Python Adapter Instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\" : \"Python Adapter Instance\",\r\n  \"description\" : \"A Python Adapter Instance\",\r\n  \"collectorId\" : \"1\",\r\n  \"adapterKindKey\" : \"PythonRemediationVcenterAdapter\",\r\n  \"resourceIdentifiers\" : [ {\r\n    \"name\" : \"AUTODISCOVERY\",\r\n    \"value\" : \"true\"\r\n  }, {\r\n    \"name\" : \"PROCESSCHANGEEVENTS\",\r\n    \"value\" : \"true\"\r\n  }, {\r\n    \"name\" : \"VCURL\",\r\n    \"value\" : \"https://vc-vapp.mylab.dias\"\r\n  } ],\r\n  \"credential\" : {\r\n    \"id\" : null,\r\n    \"name\" : \"Python Credential\",\r\n    \"adapterKindKey\" : \"PythonRemediationVcenterAdapter\",\r\n    \"credentialKindKey\" : \"PRINCIPALCREDENTIAL\",\r\n    \"fields\" : [ {\r\n      \"name\" : \"UserName\",\r\n      \"value\" : \"administrator@mylab.dias\"\r\n    }, {\r\n      \"name\" : \"Password\",\r\n      \"value\" : \"VMware1!\"\r\n    } ],\r\n    \"others\" : [ ],\r\n    \"otherAttributes\" : {\r\n    }\r\n  },\r\n  \"others\" : [ ],\r\n  \"otherAttributes\" : {\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						},
						"description": "Be sure to check values in the JSON body for credentials.\nAlso note you will need to start the adapter using \"Star an adapter instance\" \nafter creation using the UUID from the response.\n\nIf you aren't using a CA, the certificate will have to be added via the UI\nI do not know of a way to do this via the REST API"
					},
					"response": []
				},
				{
					"name": "Start an adapter instance",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters/{{adapterId}}/monitoringstate/start",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters",
								"{{adapterId}}",
								"monitoringstate",
								"start"
							]
						},
						"description": "Replace the UUID with the ID of the adapter instance you want to start\nThis can be retrieved using Get Adapter Instances"
					},
					"response": []
				},
				{
					"name": "Patch an Adapter Instance",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{adapterPatchPayload}}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch an Adapter Instance with Connection Test",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{adapterPatchPayload}}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters/testConnection",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters",
								"testConnection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a vCenter Adapter Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"adapterId\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"credentialId\", jsonData.credentialInstanceId);\r",
									"postman.setEnvironmentVariable(\"adapterPatchPayload\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"WDC vCenter Adapter\",\n  \"description\": \"A vCenter Adapter Instance\",\n  \"collectorId\": \"1\",\n  \"adapterKindKey\": \"VMWARE\",\n  \"resourceIdentifiers\": [\n    {\n      \"name\": \"AUTODISCOVERY\",\n      \"value\": \"true\"\n    },\n    {\n      \"name\": \"PROCESSCHANGEEVENTS\",\n      \"value\": \"true\"\n    },\n    {\n      \"name\": \"VCURL\",\n      \"value\": \"wdcvc01.cmbu.local\"\n    },\n    {\n      \"name\": \"CLOUD_TYPE\",\n      \"value\": \"PRIVATE_CLOUD\"\n    }\n  ],\n  \"credential\": {\n    \"id\": null,\n    \"name\": \"WDC Credentials\",\n    \"adapterKindKey\": \"VMWARE\",\n    \"credentialKindKey\": \"PRINCIPALCREDENTIAL\",\n    \"fields\": [\n      {\n        \"name\": \"USER\",\n        \"value\": \"username\"\n      },\n      {\n        \"name\": \"PASSWORD\",\n        \"value\": \"secret\"\n      }\n    ],\n    \"others\": [],\n    \"otherAttributes\": {}\n  },\n  \"others\": [],\n  \"otherAttributes\": {}\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						},
						"description": "Be sure to check values in the JSON body for credentials.\nAlso note you will need to start the adapter using \"Star an adapter instance\" \nafter creation using the UUID from the response.\n\nIf you aren't using a CA, the certificate will have to be added via the UI\nI do not know of a way to do this via the REST API"
					},
					"response": []
				},
				{
					"name": "VMC Step 2 - Create a VMC on AWS vCenter Adapter Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"adapterId\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"credentialId\", jsonData.credentialInstanceId);\r",
									"postman.setEnvironmentVariable(\"adapterPatchPayload\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"VMC vCenter Adapter\",\n  \"description\": \"A VMC vCenter Adapter Instance\",\n  \"collectorId\": \"1\",\n  \"adapterKindKey\": \"VMWARE\",\n  \"resourceIdentifiers\": [\n            {\n                \"identifierType\": {\n                    \"name\": \"AUTODISCOVERY\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"true\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"CLOUD_TYPE\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"VMWARE_CLOUD_ON_AWS\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"DV_PORT_GROUP_DISABLED\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"false\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"DVS_DISABLED\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"false\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"ENABLE_ACTIONS\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"false\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"GFS_SKIP_PATTERNS\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"docker/devicemapper/mnt\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"PDRS_STATS_PROVIDER\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"false\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"PROCESSCHANGEEVENTS\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"true\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"VCURL\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": true\n                },\n                \"value\": \"vcenter.sddc-54-203-176-241.vmwarevmc.com\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"VM_FOLDER_DISABLED\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"false\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"VM_LIMIT\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"2000000000\"\n            },\n            {\n                \"identifierType\": {\n                    \"name\": \"VMEntityVCID\",\n                    \"dataType\": \"STRING\",\n                    \"isPartOfUniqueness\": false\n                },\n                \"value\": \"ddda4fc2-356d-4b0a-8256-cf02748a9fc2\"\n            }\n        ],\n  \"credential\": {\n    \"id\": null,\n    \"name\": \"VMC Credentials\",\n    \"adapterKindKey\": \"VMWARE\",\n    \"credentialKindKey\": \"PRINCIPALCREDENTIAL\",\n    \"fields\": [\n      {\n        \"name\": \"USER\",\n        \"value\": \"username\"\n      },\n      {\n        \"name\": \"PASSWORD\",\n        \"value\": \"secret\"\n      }\n    ],\n    \"others\": [],\n    \"otherAttributes\": {}\n  },\n  \"others\": [],\n  \"otherAttributes\": {}\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						},
						"description": "Be sure to check values in the JSON body for credentials.\nAlso note you will need to start the adapter using \"Star an adapter instance\" \nafter creation using the UUID from the response.\n\nIf you aren't using a CA, the certificate will have to be added via the UI\nI do not know of a way to do this via the REST API"
					},
					"response": []
				},
				{
					"name": "VMC Step 1 - Create a VMC on AWS Adapter Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"adapterId\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"credentialId\", jsonData.credentialInstanceId);\r",
									"postman.setEnvironmentVariable(\"adapterPatchPayload\", responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"VMC SDDC\",\n  \"collectorId\": \"1\",\n  \"adapterKindKey\": \"VmcAdapter\",\n  \"resourceIdentifiers\": [\n    {\n        \"identifierType\": {\n            \"name\": \"COSTING_ENABLED\",\n            \"dataType\": \"STRING\",\n            \"isPartOfUniqueness\": false\n        },\n        \"value\": \"true\"\n    },\n    {\n        \"identifierType\": {\n            \"name\": \"OrgId\",\n            \"dataType\": \"STRING\",\n            \"isPartOfUniqueness\": true\n        },\n        \"value\": \"2acf4023-1778-4e6a-a892-7635b8c7f4fb\"\n    }\n    \n  ],\n  \"credential\": {\n    \"id\": null,\n    \"name\": \"VMC CSP Toekn\",\n    \"adapterKindKey\": \"VmcAdapter\",\n    \"credentialKindKey\": \"Credentials\",\n    \"fields\": [\n        {\n            \"name\": \"refresh_token\"\n            \"value\":\n        },\n        {\n            \"name\": \"proxy_host\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"proxy_port\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"proxy_username\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"proxy_password\"\n        },\n        {\n            \"name\": \"proxy_domain\",\n            \"value\": \"\"\n        }\n    ],\n    \"others\": [],\n    \"otherAttributes\": {}\n  },\n  \"others\": [],\n  \"otherAttributes\": {}\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						},
						"description": "Be sure to check values in the JSON body for credentials.\nAlso note you will need to start the adapter using \"Star an adapter instance\" \nafter creation using the UUID from the response.\n\nIf you aren't using a CA, the certificate will have to be added via the UI\nI do not know of a way to do this via the REST API"
					},
					"response": []
				},
				{
					"name": "Create a vSAN Adapter Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"adapterId\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"credentialId\", jasonData.credentialInstanceId);\r",
									"postman.setEnvironmentVariable(\"adapterPatchPayload\", responseBody);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"WDC vCenter Adapter - vSAN\",\n    \"adapterKindKey\": \"VirtualAndPhysicalSANAdapter\",\n    \"resourceKindKey\": \"VirtualAndPhysicalSANAdapter Instance\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"AutoDiscovery\",\n            \"value\": \"true\"\n        },\n        {\n            \"name\": \"EnableCimApi\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"VCID\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"VCServer\",\n            \"value\": \"wdcvc01.cmbu.local\"\n        }\n    ],\n    \"credential\": {\n        \"id\": null,\n        \"name\": \"vSAN WDC Creds\",\n        \"adapterKindKey\": \"VirtualAndPhysicalSANAdapter\",\n        \"credentialKindKey\": \"VCCredential\",\n        \"fields\": [\n            {\n                \"name\": \"VCUser\",\n                \"value\": \"username\"\n            },\n            {\n                \"name\": \"VCPassword\",\n                \"value\": \"password\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						},
						"description": "Note that you may need to run both \"Patch an Adapter Instance\" and \"Patch an Adapter Instance with Connection Test\" before running \"Start an adapter intance\""
					},
					"response": []
				},
				{
					"name": "Create an AWS Adapter Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"adapterId\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"adapterPatchPayload\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Dummy Account\",\n    \"adapterKindKey\": \"AmazonAWSAdapter\",\n    \"resourceKindKey\": \"AmazonAWSAdapter Instance\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"BLACKLIST\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"COLLECT_CUSTOM_METRICS\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"REGIONS\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"SERVICES\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"SUPPORT_AUTODISCOVERY\",\n            \"value\": \"true\"\n        },\n        {\n            \"name\": \"WHITELIST\",\n            \"value\": \"\"\n        }\n    ],\n    \"description\": \"\",\n    \"credential\": {\n        \"id\": null,\n        \"name\": \"AWS Creds\",\n        \"adapterKindKey\": \"AmazonAWSAdapter\",\n        \"credentialKindKey\": \"AWSCREDENTIALS\",\n        \"fields\": [\n            {\n                \"name\": \"ACCESSKEY\",\n                \"value\": \"accesskeyvalue\"\n            },\n            {\n                \"name\": \"SECRETKEY\",\n                \"value\": \"secretkeyvalue\"\n            },\n            {\n                \"name\": \"PROXYHOST\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXYPORT\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXYUSERNAME\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXYPASSWORD\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXYWORKSTATION\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXYDOMAIN\",\n                \"value\": null\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an Azure Adapter Instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"adapterId\", jsonData.id);\r",
									"postman.setEnvironmentVariable(\"adapterPatchPayload\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Dummy Account\",\n    \"adapterKindKey\": \"MicrosoftAzureAdapter\",\n    \"resourceKindKey\": \"MicrosoftAzureAdapter Instance\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"AZURE_SUBSCRIPTION_ID\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"AZURE_TENANT_ID\",\n            \"value\": \"false\"\n        },\n        {\n            \"name\": \"REGIONS\",\n            \"value\": \"\"\n        },\n        {\n            \"name\": \"SERVICES\",\n            \"value\": \"\"\n        }\n    ],\n    \"description\": \"\",\n    \"credential\": {\n        \"id\": null,\n        \"name\": \"Azure Creds\",\n        \"adapterKindKey\": \"MicrosoftAzureAdapter\",\n        \"credentialKindKey\": \"AZURE_CLIENT_CREDENTIALS\",\n        \"fields\": [\n            {\n                \"name\": \"AZURE_CLIENT_ID\",\n                \"value\": \"accesskeyvalue\"\n            },\n            {\n                \"name\": \"CLIENT_SECRET\",\n                \"value\": \"secretkeyvalue\"\n            },\n            {\n                \"name\": \"PROXY_HOST\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXY_PORT\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXY_USERNAME\",\n                \"value\": null\n            },\n            {\n                \"name\": \"PROXY_PASSWORD\",\n                \"value\": null\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Adapter Instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters/{{adapterId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters",
								"{{adapterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Adapter Instance",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{adapterPatchPayload}}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters/{{adapterId}}?deleteResources=true",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters",
								"{{adapterId}}"
							],
							"query": [
								{
									"key": "deleteResources",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "Get Virtual Machine by Resource Identifier",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"propertyConditions\" : {\n    \t\"conditions\" : [{\n    \t\t\"key\": \"summary|UUID\",\n    \t\t\"operator\":\"EQ\",\n    \t\t\"stringValue\":\"dae3aaf1-b603-40ee-af83-06be4e87a5bb\"\n    \t}]\n\n    \t\n    }\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/query ",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"query "
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"resourceIds\":[\"daee892f-6938-45dd-9ee9-e6669b5150a5\", \n        \"4541356a-2d54-411c-b276-312552f92c52\", \n        \"4a0d7bfa-e095-45f4-b158-6a0090e4684a\", \n        \"59773bb2-960d-48b9-a3a4-ca3de52a2ade\", \n        \"fe5d227e-fba3-4d5f-97ad-8c6f7c02534a\", \n        \"37045610-a3f2-4489-8bdd-4c223a243552\", \n        \"3ad8fed7-0aa1-4aee-a79b-f01cd62e96cf\", \n        \"a7e59f4f-d59c-4593-b9bd-1a8dfd4b5587\", \n        \"273e71a2-5b0e-4fae-903b-e0a7b26608e2\", \n        \"7ded588f-637c-48a6-a4e4-cbfc6b6d5713\"]\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/query",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VirtualMachine Res by Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources?resourceKind=virtualmachine&name=diasj-frontend-001110",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources"
							],
							"query": [
								{
									"key": "resourceKind",
									"value": "virtualmachine"
								},
								{
									"key": "name",
									"value": "diasj-frontend-001110"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get StatKeys of a Resource",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{resourceId}}/statkeys",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{resourceId}}",
								"statkeys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stats from Resource (Not query)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var epoch = (new Date).getTime();",
									"postman.setEnvironmentVariable(\"epoch\", epoch);",
									"var epochPrev24 = epoch - (24*60*60*1000)",
									"postman.setEnvironmentVariable(\"epochPrev24\", epochPrev24)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/0bb21390-a393-4d7d-921f-37b89af8f434/stats?begin={{epochPrev24}}&end={{epoch}}&intervalQuantifier=1&intervalType=HOURS&rollUpType=AVG&statKey=cpu:1|readyPct",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"0bb21390-a393-4d7d-921f-37b89af8f434",
								"stats"
							],
							"query": [
								{
									"key": "begin",
									"value": "{{epochPrev24}}"
								},
								{
									"key": "end",
									"value": "{{epoch}}"
								},
								{
									"key": "intervalQuantifier",
									"value": "1"
								},
								{
									"key": "intervalType",
									"value": "HOURS"
								},
								{
									"key": "rollUpType",
									"value": "AVG"
								},
								{
									"key": "statKey",
									"value": "cpu:1|readyPct"
								}
							]
						},
						"description": "I have not tested but you may be able to use the \"resourceIds\" input paramter to specify multiple resources (of the same kind, obviously).  The example here shows a daily avg for 30 days.  Timestamps are milli from epoch."
					},
					"response": []
				},
				{
					"name": "Add or Update Properties of a Resource",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"property-content\" : [ {\r\n    \"statKey\" : \"apiInjected|random\",\r\n    \"timestamps\" : [ 1477432000 ],\r\n    \"values\" : [ 0 ],\r\n    \"others\" : [ ],\r\n    \"otherAttributes\" : {\r\n    }\r\n  } ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{resourceId}}/properties",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{resourceId}}",
								"properties"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resources by resourceKind and Save to var",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var resourceIds = \"\";",
									"",
									"for (var i in jsonData[\"resourceList\"]) {",
									"    if (jsonData[\"resourceList\"][i].identifier) {",
									"        resourceIds = resourceIds + (', \"' + jsonData[\"resourceList\"][i].identifier + '\"');",
									"    }",
									"    ",
									"}",
									"resourceIds = resourceIds.slice(1);",
									"postman.setEnvironmentVariable(\"resourceIds\", resourceIds);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources?resourceKind=virtualmachine",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources"
							],
							"query": [
								{
									"key": "resourceKind",
									"value": "virtualmachine"
								}
							]
						},
						"description": "Test script will extract resource IDs from the response and load into the env as \"resourceIds\"\nYou can then use this within the body of a request"
					},
					"response": []
				},
				{
					"name": "Get Resources by resourceKind and parse by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var vmNames = new Array(\"app-c-703\",\"db-c-702\",\"db-c-705\",\"db-c-708\",\"web-c-701\");",
									"var jsonData = JSON.parse(responseBody);",
									"var resourceIds = \"\";",
									"",
									"for (var i in jsonData[\"resourceList\"]) {",
									"    if (vmNames.indexOf(jsonData[\"resourceList\"][i][\"resourceKey\"][\"name\"]) != -1) {",
									"        resourceIds = resourceIds + (', \"' + jsonData[\"resourceList\"][i].identifier + '\"');",
									"    }",
									"    ",
									"}",
									"resourceIds = resourceIds.slice(1);",
									"postman.setEnvironmentVariable(\"resourceIds\", resourceIds);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources?resourceKind=virtualmachine",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources"
							],
							"query": [
								{
									"key": "resourceKind",
									"value": "virtualmachine"
								}
							]
						},
						"description": "Test script will extract resource IDs from the response and load into the env as \"resourceIds\"\nYou can then use this within the body of a request"
					},
					"response": []
				},
				{
					"name": "Get StatKeys for Resource and Load var",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var cpuStatKeys = \"\";",
									"var cpuStatKeysJSON = \"\";",
									"",
									"for (var i in jsonData[\"stat-key\"]) {",
									"    if (jsonData[\"stat-key\"][i].key.startsWith(\"cpu|\")) {",
									"        cpuStatKeys = cpuStatKeys + (\"&statKey=\" + jsonData[\"stat-key\"][i].key);",
									"        cpuStatKeysJSON = cpuStatKeysJSON + (', \"' + jsonData[\"stat-key\"][i].key + '\"');",
									"    }",
									"    ",
									"}",
									"cpuStatKeysJSON = cpuStatKeysJSON.slice(1);",
									"postman.setEnvironmentVariable(\"cpuStatsRequest\", cpuStatKeys);",
									"postman.setEnvironmentVariable(\"cpuStatsJSON\", cpuStatKeysJSON);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{resourceId}}/statkeys",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{resourceId}}",
								"statkeys"
							]
						},
						"description": "Grabs CPU statKeys for a VM resource using the {{resourceId}} env var.\nPopulates two env vars:\ncpuStatKeys for GET stats for small requests (1 to ~10 VMs)\ncpuStatKeysJSON for POST stats for large requests (use in conjunction with {{resourceIds}}"
					},
					"response": []
				},
				{
					"name": "Get TopN Stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var epoch = (new Date).getTime();",
									"postman.setEnvironmentVariable(\"epoch\", epoch);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/stats/topn?begin={{epoch}}&intervalType=Hours&intervalQuantifier=24&rollUpType=AVG&statKey=",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"stats",
								"topn"
							],
							"query": [
								{
									"key": "begin",
									"value": "{{epoch}}"
								},
								{
									"key": "intervalType",
									"value": "Hours"
								},
								{
									"key": "intervalQuantifier",
									"value": "24"
								},
								{
									"key": "rollUpType",
									"value": "AVG"
								},
								{
									"key": "statKey",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add or Update Stats of a Resource",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var epoch = (new Date).getTime();",
									"postman.setEnvironmentVariable(\"epoch\", epoch);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"stat-content\" : [ {\r\n    \"statKey\" : \"apiInjected|random5\",\r\n    \"timestamps\" : [ {{epoch}} ],\r\n    \"data\" : [ 6 ],\r\n    \"others\" : [ ],\r\n    \"otherAttributes\" : {\r\n    }\r\n  } ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{resourceId}}/stats",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{resourceId}}",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add or Update Stats for Multiple Resources",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var epoch = (new Date).getTime();",
									"postman.setEnvironmentVariable(\"epoch\", epoch);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"stat-content\" : [ {\r\n    \"statKey\" : \"apiInjected|random5\",\r\n    \"timestamps\" : [ {{epoch}} ],\r\n    \"data\" : [ 6 ],\r\n    \"others\" : [ ],\r\n    \"otherAttributes\" : {\r\n    }\r\n  } ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{resourceId}}/stats",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{resourceId}}",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Symptoms",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"compositeOperator\" : \"AND\",\r\n  \"symptomId\" : [ ],\r\n  \"resource-query\" : {\r\n    \"name\" : null,\r\n    \"regex\" : null,\r\n    \"adapterKind\" : null,\r\n    \"resourceKind\" : null,\r\n    \"collectorName\" : null,\r\n    \"collectorId\" : null,\r\n    \"maintenanceScheduleId\" : null,\r\n    \"adapterInstanceId\" : null,\r\n    \"recentlyAdded\" : null,\r\n    \"resourceState\" : null,\r\n    \"resourceStatus\" : null,\r\n    \"resourceHealth\" : null,\r\n    \"parentId\" : null,\r\n    \"credentialId\" : null,\r\n    \"resourceId\" : [ \"5748438c-41d5-4397-a59b-efe973674653\" ],\r\n    \"propertyName\" : null,\r\n    \"propertyValue\" : null,\r\n    \"statKey\" : null,\r\n    \"statKeyLowerBound\" : null,\r\n    \"statKeyUpperBound\" : null,\r\n    \"statKeyInclusive\" : true,\r\n    \"others\" : [ ],\r\n    \"otherAttributes\" : {\r\n    }\r\n  },\r\n  \"includeChildrenResources\" : false,\r\n  \"activeOnly\" : true,\r\n  \"alarmType\" : [ ],\r\n  \"alarmCriticality\" : [ \"CRITICAL\", \"IMMEDIATE\", \"WARNING\", \"INFORMATION\" ],\r\n  \"symptomDefinitionId\" : [ ],\r\n  \"statKey\" : [ ],\r\n  \"others\" : [ ],\r\n  \"otherAttributes\" : {\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/symptoms/query",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"symptoms",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Properties of Resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resourceIds\" : [ {{resourceIds}} ],\n    \"propertyKeys\" : [ \"summary|ParentHost\",\"summary|guest|toolsVersion\"]\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/properties/latest/query",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"properties",
								"latest",
								"query"
							]
						},
						"description": "Example that uses \"Get Resources by resourceKind and Load var\" to provide a list of resource IDs using the {{resourceId}} env var."
					},
					"response": []
				},
				{
					"name": "Query Metrics of Resources",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var epoch = (new Date).getTime();",
									"postman.setEnvironmentVariable(\"epoch\", epoch);",
									"var epochPrev24 = epoch - (24*60*60*1000)",
									"postman.setEnvironmentVariable(\"epochPrev24\", epochPrev24)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"type": "text",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"begin\": {{epochPrev24}},\n    \"end\": {{epoch}},\n    \"intervalType\": \"HOURS\",\n    \"intervalQuantifier\": 1,\n    \"rollUpType\": \"AVG\",\n    \"resourceId\": [ \n    \t{{resourceIds}} \n    ],\n    \"statKey\": [\n    \t{{cpuStatsJSON}} \n    ]\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/stats/query",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"stats",
								"query"
							]
						},
						"description": "Example that uses \"Get Resources by resourceKind and Load var\" to provide a list of resource IDs using the {{resourceId}} env var."
					},
					"response": []
				},
				{
					"name": "Create ResourceKind of AdapterKind",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/adapterkinds/mykey",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"adapterkinds",
								"mykey"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Custom Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/groups",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Custom Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "Get Matching Resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"propertyConditions\" : {\n    \t\"conditions\" : [{\n    \t\t\"key\": \"summary|guest|ipAddress\",\n    \t\t\"operator\":\"EQ\",\n    \t\t\"stringValue\":\"172.18.0.1\"\n    \t}]\n\n    \t\n    }\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/query ",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"query "
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Stat Keys for Virtual Machines",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapterkinds/VMWARE/resourcekinds/VirtualMachine/statkeys",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapterkinds",
								"VMWARE",
								"resourcekinds",
								"VirtualMachine",
								"statkeys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VMC SDDC by Identifier[Id]",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapterkinds/VmcAdapter/resourcekinds/SDDC/resources?identifiers[Id]=00000000-0000-0000-0000-000000000000",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapterkinds",
								"VmcAdapter",
								"resourcekinds",
								"SDDC",
								"resources"
							],
							"query": [
								{
									"key": "identifiers[Id]",
									"value": "00000000-0000-0000-0000-000000000000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users and Authentication",
			"item": [
				{
					"name": "Roles",
					"item": [
						{
							"name": "Get User Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var role = jsonData[\"userRoles\"][0];\r",
											"pm.collectionVariables.set(\"rolePayload\", JSON.stringify(role));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}",
										"type": "text",
										"warning": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"warning": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"warning": ""
									}
								],
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/auth/roles?roleName=Field Users",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"auth",
										"roles"
									],
									"query": [
										{
											"key": "roleName",
											"value": "Field Users"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User Role",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}",
										"type": "text",
										"warning": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"warning": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"warning": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{rolePayload}}"
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/auth/roles",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"auth",
										"roles"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set User Role Privileges",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var roleData = JSON.parse(pm.collectionVariables.get(\"rolePayload\"));\r",
											"var privKeys = roleData[\"privilege-keys\"];\r",
											"pm.variables.set(\"payload\", JSON.stringify(privKeys));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}",
										"type": "text",
										"warning": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"warning": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"warning": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"privilege-key\" : {{payload}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/auth/roles/Field Users/privileges",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"auth",
										"roles",
										"Field Users",
										"privileges"
									]
								}
							},
							"response": []
						}
					],
					"description": "In these examples, you can export a user role from one vROps instance and import it into another. \r\n\r\n* Get User Role on the source vROps to populate a collection variable with the payload for the POST. Be sure to update the role name in the URL template with the role name you wish (i.e. suite-api/api/auth/roles?roleName=userRoleName).\r\n* Create User Role on the destination vROps (which uses the above collection variable).\r\n\r\nOptionally, you can update an existing user role permissions. For example, if you have a permission change on the source vROps instance and you want to update the destination:\r\n\r\n* Get user Role on the source to fetch the role properties.\r\n* Set User Role Privileges on the destination will parse the properties and update with the new permission set.\r\n\r\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Get Auth Sources",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/auth/sources",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"auth",
								"sources"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Local User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\" : \"frank\",\r\n  \"firstName\" : \"Frank\",\r\n  \"lastName\" : \"Barnes\",\r\n  \"password\" : \"VMware1!\",\r\n  \"enabled\" : \"true\",\r\n  \"role-permissions\": [\r\n    {\r\n        \"roleName\": \"GeneralUser-1\",\r\n        \"allowAllObjects\": true\r\n    }]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/auth/users",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"auth",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change User Password",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "applicaiton/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/auth/users?username=frank",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"auth",
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "frank"
								}
							]
						},
						"description": "May also include query such as id, roleName and username"
					},
					"response": []
				}
			]
		},
		{
			"name": "vRealize Operations CASA REST API",
			"item": [
				{
					"name": "Get node thumbrint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://{{vrops}}/casa/node/thumbprint",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"casa",
								"node",
								"thumbprint"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure cluster",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"master\" : {\n    \"name\" : \"master-node\",\n    \"address\" : \"10.196.206.210\",\n    \"thumbprint\" : \"96:68:98:54:9B:9F:18:07:15:C5:76:8A:EC:41:A5:63:FD:20:36:B1\"\n  },\n  \"admin_password\" : \"xxxxx\",\n  \"ntp_servers\" : [ \"10.196.206.4\" ],\n  \"init\" : true,\n  \"dry-run\" : false\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/casa/cluster",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"casa",
								"cluster"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "content-type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "pemfile",
									"type": "file",
									"src": []
								},
								{
									"key": "Activate",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{vrops}}/casa/cluster/security/uploadcert",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"casa",
								"cluster",
								"security",
								"uploadcert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate Certificate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "content-type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://{{vrops}}/casa/cluster/security/certificate?certType=CUSTOM&action=ACTIVATE",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"casa",
								"cluster",
								"security",
								"certificate"
							],
							"query": [
								{
									"key": "certType",
									"value": "CUSTOM"
								},
								{
									"key": "action",
									"value": "ACTIVATE"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cluster config status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/casa/cluster/status",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"casa",
								"cluster",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get vR Ops Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"bearerToken\", jsonData.token);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\" : \"{{user}}\",\r\n  \"password\" : \"{{pass}}\"\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/auth/token/acquire",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"auth",
								"token",
								"acquire"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start an adapter instance",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters/15464308-f586-4a93-b772-8656d0a7e5f5/monitoringstate/start",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters",
								"15464308-f586-4a93-b772-8656d0a7e5f5",
								"monitoringstate",
								"start"
							]
						},
						"description": "Replace the UUID with the ID of the adapter instance you want to start\nThis can be retrieved using Get Adapter Instances"
					},
					"response": []
				},
				{
					"name": "Post Custom Cert vROps",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "-----BEGIN CERTIFICATE-----\r\n\r\n-----END CERTIFICATE-----\r\n-----BEGIN CERTIFICATE-----\r\n\r\n-----END CERTIFICATE-----\r\n-----BEGIN CERTIFICATE-----\r\n\r\n-----END CERTIFICATE-----\r\n-----BEGIN RSA PRIVATE KEY-----\r\n\r\n-----END RSA PRIVATE KEY-----"
						},
						"url": {
							"raw": "https://{{vrops}}/casa/cluster/security/postcert",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"casa",
								"cluster",
								"security",
								"postcert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply License Key to Weekly vROps",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"solutionLicenses\" : [ {\n    \"licenseKey\" : \"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n  } ]\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/deployment/licenses",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"deployment",
								"licenses"
							]
						},
						"description": "Be sure to check values in the JSON body for credentials.\nAlso note you will need to start the adapter using \"Star an adapter instance\" \nafter creation using the UUID from the response.\n\nIf you aren't using a CA, the certificate will have to be added via the UI\nI do not know of a way to do this via the REST API"
					},
					"response": []
				},
				{
					"name": "Remove Inital Config Wizard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-vRealizeOps-API-use-unsupported",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"keyValues\": [ { \"key\": \"configurationWizardFirstConfigDone\", \"values\": [\"true\"] } ] }"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/internal/deployment/config/properties/java_util_HashSet",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"internal",
								"deployment",
								"config",
								"properties",
								"java_util_HashSet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Admin Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"old_password\" : \"oldPassword@123\",\r\n\"new_password\" : \"newPassword222!\"\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{vrops}}/casa/cluster/security/adminpassword",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"casa",
								"cluster",
								"security",
								"adminpassword"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "{{pass}}",
						"type": "string"
					},
					{
						"key": "username",
						"value": "{{user}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Actions",
			"item": [
				{
					"name": "Get All Actions Definitions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/actiondefinitions",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"actiondefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Populate Action (run before perform)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"contextResourceId\" : [ \"bc14eb84-05df-47f9-979c-f811f0da1c1d\" ],\r\n  \"others\" : [ ],\r\n  \"otherAttributes\" : { }\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/actions/{{actionId}}/query",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"actions",
								"{{actionId}}",
								"query"
							]
						},
						"description": "You will need to have populated \n\n* resourceId env var\n* actionId env var\n\nResponse is parsed and saved as input for the performAction API"
					},
					"response": []
				},
				{
					"name": "Perform Action (modify body first)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"contextId\": \"importPackage\",\n        \"contextResourceId\": [\n            \"bc14eb84-05df-47f9-979c-f811f0da1c1d\"\n        ],\n        \"parameterGroup\": [\n            {\n                \"resourceId\": \"bc14eb84-05df-47f9-979c-f811f0da1c1d\",\n                \"parameterValue\": [\n                    {\n                        \"name\": \"overwrite\",\n                        \"value\": \"1\"\n                    }\n                ]\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/actions/{{actionId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "Run Populate Action first get body - copy and paste the \"action-execution\" value in the body of this request.  Update values in body as desired."
					},
					"response": []
				},
				{
					"name": "Get Task Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "For an action that has been run, you can use this to check status.  actionExecutionId is pre-populated from the Perform Action request."
					},
					"response": []
				}
			]
		},
		{
			"name": "Application Monitoring Agent LCM",
			"item": [
				{
					"name": "Physical OS Agent Install",
					"item": [
						{
							"name": "1 - Get Collector",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"cloudProxyId\", jsonData.collector[0].id);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{bearerToken}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text",
										"name": "Accept"
									}
								],
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/collectors?host={{cpIp}}",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"collectors"
									],
									"query": [
										{
											"key": "host",
											"value": "{{cpIp}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Sign Client Certificate",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{bearerToken}}"
									},
									{
										"key": "Accept",
										"name": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": ""
									}
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/applications/clientCertificate/{{cloudProxyId}}",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"applications",
										"clientCertificate",
										"{{cloudProxyId}}"
									]
								},
								"description": "Use this API to have the application remote collector sign the CSR generated on the physical OS."
							},
							"response": []
						}
					]
				},
				{
					"name": "Install Agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"resourceCredentials\" : [ {\r\n    \"resourceId\" : {{resourceId}},\r\n    \"username\" : \"demouser\",\r\n    \"password\" : \"vRealiz3!\",\r\n    \"addRuntimeUser\" : true\r\n  } ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/applications/agents",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"applications",
								"agents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop Agent",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"contextResourceIDs\" : [ {{resourceId}} ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/applications/agents/stop",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"applications",
								"agents",
								"stop"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Agent Task Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/applications/agents/c0d33547-0323-4b63-9764-c3a78a535557/status",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"applications",
								"agents",
								"c0d33547-0323-4b63-9764-c3a78a535557",
								"status"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "Get Container Adapter Instance ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"containerAdapterInstanceId\", jsonData.adapterInstancesInfoDto[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters?adapterKindKey=Container",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							],
							"query": [
								{
									"key": "adapterKindKey",
									"value": "Container"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Object named \"Postman\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"applicationObjectId\", jsonData.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"creationTime\": null,\r\n  \"resourceKey\": {\r\n    \"name\": \"Postman\",\r\n    \"adapterKindKey\": \"Container\",\r\n    \"resourceKindKey\": \"BusinessService\",\r\n    \"resourceIdentifiers\": []\r\n  },\r\n  \"resourceStatusStates\": [],\r\n  \"resourceHealth\": null,\r\n  \"resourceHealthValue\": null,\r\n  \"dtEnabled\": true,\r\n  \"monitoringInterval\": 5,\r\n  \"badges\": [],\r\n  \"relatedResources\": [],\r\n  \"identifier\": null\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{containerAdapterInstanceId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"adapters",
								"{{containerAdapterInstanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Collecting Application Object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationObjectId}}/monitoringstate/start",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationObjectId}}",
								"monitoringstate",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Tier named \"App\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"applicationTierObjectId\", jsonData.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"creationTime\": null,\r\n  \"resourceKey\": {\r\n    \"name\": \"App\",\r\n    \"adapterKindKey\": \"Container\",\r\n    \"resourceKindKey\": \"Tier\",\r\n    \"resourceIdentifiers\": [\r\n      {\r\n        \"identifierType\": {\r\n          \"name\": \"BS_Tier Name\",\r\n          \"dataType\": \"STRING\",\r\n          \"isPartOfUniqueness\": true\r\n        },\r\n        \"value\": \"{{applicationObjectId}}_App\"\r\n      }\r\n    ]\r\n  },\r\n  \"resourceStatusStates\": [],\r\n  \"resourceHealth\": null,\r\n  \"resourceHealthValue\": null,\r\n  \"dtEnabled\": true,\r\n  \"monitoringInterval\": 5,\r\n  \"badges\": [],\r\n  \"relatedResources\": [],\r\n  \"identifier\": null\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{containerAdapterInstanceId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"adapters",
								"{{containerAdapterInstanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Collection Application Tier Object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationTierObjectId}}/monitoringstate/start",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationTierObjectId}}",
								"monitoringstate",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Make Application Tier Object a child of the Application Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"uuids\" : [ \"{{applicationObjectId}}\" ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationTierObjectId}}/relationships/parents",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationTierObjectId}}",
								"relationships",
								"parents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Objects as child of Application Tier Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"uuids\" : [ \"832e49a8-e85d-4777-9a83-1c15b4660ec1\", \"f2c1d832-91e6-44fc-9499-3aff354c199f\" ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationTierObjectId}}/relationships/children",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationTierObjectId}}",
								"relationships",
								"children"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Kim Bottu's Collection",
			"item": [
				{
					"name": "1 Request authentication token",
					"item": [
						{
							"name": "Get vROps Auth Token using a local user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"bearerToken\", \"vRealizeOpsToken \" + jsonData.token);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "VMw@re1!",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/auth/token/acquire",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"auth",
										"token",
										"acquire"
									]
								},
								"description": "Type = Basic Authentication\r\nUser = admin\r\npassword = password of local vROps admin"
							},
							"response": []
						},
						{
							"name": "Get vROps Auth Token using a local vIDM user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"bearerToken\", \"vRealizeOpsToken \" + jsonData.token);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"user@system domain\",\r\n\t\"password\" : \"VMw@re1!\",\r\n\t\"authSource\" : \"vIDMAuthSource\"\r\n}"
								},
								"url": {
									"raw": "https://{{vrops}}/suite-api/api/auth/token/acquire",
									"protocol": "https",
									"host": [
										"{{vrops}}"
									],
									"path": [
										"suite-api",
										"api",
										"auth",
										"token",
										"acquire"
									]
								},
								"description": "content-type= application json\r\n\r\nChange the BODY as needed. Format is raw JSON. \r\n{\r\n  \"username\" : \"{{user}}@system domain\" ( replace \"{{user}}\" and leave \"@system domain\" in place, this is the local VIDM Authentication Source),\r\n  \"authSource\" : \"vIDMAuthSource\",\r\n  \"password\" : \"yourpassword\"\r\n}"
							},
							"response": []
						}
					]
				},
				{
					"name": "2 vIDM Authentication Source",
					"item": [
						{
							"name": "1 Create a vIDM3.3.2 Authentication Source",
							"item": [
								{
									"name": "Find all configured Authorization Sources in vROps",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/auth/sources",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"auth",
												"sources"
											]
										},
										"description": "https://{{vrops}}/suite-api/api/auth/sources\r\nFind all configured Authentication Sources in vROps using a Authorization token:\r\nIn Headers, add the KEY Authorization VALUE = vRealizeOpsToken + token -> 6e143a16-d67e-4863-8b81-dcc7c5d72e09::407b8217-85c9-48d9-b30c-ff4dfc2fbcad"
									},
									"response": []
								},
								{
									"name": "Create vIDM Authentication Source",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authentication",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<ops:auth-source lastModified=\"1523035908002\" created=\"1523035908002\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <ops:name>vIDM332</ops:name>\r\n    <ops:sourceType id=\"VIDM\">\r\n        <ops:name>VIDM</ops:name>\r\n        <ops:description>DESC</ops:description>\r\n    </ops:sourceType>\r\n    <ops:name-value name=\"display-name\">{{vIDM-fqdn}}</ops:name-value>\r\n    <ops:name-value name=\"host\">{{vIDM-fqdn}}</ops:name-value>\r\n    <ops:name-value name=\"port\">443</ops:name-value>\r\n    <ops:name-value name=\"redirect-host\">https://192.168.1.225/ui/vidmClient/vidm/</ops:name-value>\r\n    <ops:name-value name=\"user-name\">{{vIDM-User}}</ops:name-value>\r\n    <ops:name-value name=\"password\">{{vIDM-User password}}</ops:name-value>\r\n   </ops:auth-source>",
											"options": {
												"raw": {
													"language": "xml"
												}
											}
										},
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/auth/sources",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"auth",
												"sources"
											]
										},
										"description": "POST https://{{vrops}}/suite-api/api/auth/sources\r\nCreate a VIDM Authentication Sources in vROps using a Authorization token: In Headers, add the KEY Authorization VALUE = vRealizeOpsToken + token -> 6e143a16-d67e-4863-8b81-dcc7c5d72e09::407b8217-85c9-48d9-b30c-ff4dfc2fbcad\r\n\r\nChange the BODY as needed. BODY = XML\r\n\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n<ops:auth-source lastModified=\"1523035908002\" created=\"1523035908002\" xmlns:ops=\"http://webservice.vmware.com/vRealizeOpsMgr/1.0/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n    <ops:name>vIDM81</ops:name>\r\n    <ops:sourceType id=\"VIDM\">\r\n        <ops:name>VIDM</ops:name>\r\n        <ops:description>DESC</ops:description>\r\n    </ops:sourceType>\r\n    <ops:name-value name=\"display-name\">{{vidm-fqdn}}</ops:name-value>\r\n    <ops:name-value name=\"host\">{{vidm-fqdn}}</ops:name-value>\r\n    <ops:name-value name=\"port\">443</ops:name-value>\r\n    <ops:name-value name=\"redirect-host\">https://192.168.1.225/ui/vidmClient/vidm/</ops:name-value>\r\n    <ops:name-value name=\"user-name\">kim</ops:name-value>\r\n    <ops:name-value name=\"password\">VMw@re1!</ops:name-value>\r\n   </ops:auth-source>"
									},
									"response": []
								}
							]
						},
						{
							"name": "2 Use a vIDM user to connect to vROps",
							"item": [
								{
									"name": "Get Users from vROps using a VIDM AD user",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "administrator@{{yourDomain}}@VIDMAuthSource",
													"type": "string"
												},
												{
													"key": "password",
													"value": "M@l@clypse_01",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken {{bearerToken}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "applicaiton/json"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/auth/users?username=kim",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"auth",
												"users"
											],
											"query": [
												{
													"key": "username",
													"value": "kim"
												}
											]
										},
										"description": "To use a vIDM specified AD user as a User in vROps specify BASIC Authentication.\nUsername= administrator@{{yourDomain}}@VIDMAuthSource"
									},
									"response": []
								},
								{
									"name": "Get Users using VIDM local user",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "kim@system domain@VIDMAuthSource",
													"type": "string"
												},
												{
													"key": "password",
													"value": "VMw@re1!",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken {{bearerToken}}"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "applicaiton/json"
											}
										],
										"url": {
											"raw": "https://{{yourDomain}}/suite-api/api/auth/users",
											"protocol": "https",
											"host": [
												"{{yourDomain}}"
											],
											"path": [
												"suite-api",
												"api",
												"auth",
												"users"
											]
										},
										"description": "To use a vIDM specified local user as a User in vROps specify BASIC Authentication.\nUsername= kim@system domain@VIDMAuthSource\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								}
							]
						},
						{
							"name": "3 Create vCenter7.0 Cloud Account",
							"item": [
								{
									"name": "Find the Collector Group ID",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/collectors",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"collectors"
											]
										},
										"description": "Basic Authentication has been re-emabled:  https://kb.vmware.com/s/article/77271\n\nFor token based authentication:\nIn \"Headers\", add the KEY \"Authorization\"  and set the value to \"vRealizeOpsToken + TOKEN\".\nThe \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Find the resources of the Collector Group ID you want to use",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "vRealizeOpsToken  {{YourToken}}"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters/{{collectorID}}/resources",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters",
												"{{collectorID}}",
												"resources"
											]
										},
										"description": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources\n1b27552f-6a20-41cf-8b7e-c9dcba0ffda1 = vCenter Cloud ccount adapter\nresources = all the resources you can configure when setting up the \"vCenter Cloud Account\"\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Create the vCenter Cloud Account + Credential",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"vCenterAdapter\",\n    \"description\": \"vSphere adapter description\",\n    \"collectorGroupId\": \"f81e51de-5101-4c10-af6f-f9cd9cf7b77a\",\n    \"adapterKindKey\": \"VMWARE\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"VCURL\",\n            \"value\": \"vcenter7.vmusketeers.local\"\n        },\n        {\n            \"name\": \"PDRS_STATS_PROVIDER\",\n            \"value\": true\n        },\n        {\n            \"name\": \"AUTODISCOVERY\",\n            \"value\": true\n        },\n        {\n            \"name\": \"PROCESSCHANGEEVENTS\",\n            \"value\": true\n        },\n        {\n            \"name\": \"CLOUD_TYPE\",\n            \"value\": \"PRIVATE_CLOUD\"\n        },\n        {\n            \"name\": \"DV_PORT_GROUP_DISABLED\",\n            \"value\": false\n        },\n        {\n            \"name\": \"DVS_DISABLED\",\n            \"value\": false\n        },\n        {\n            \"name\": \"VM_FOLDER_DISABLED\",\n            \"value\": false\n        },\n        {\n            \"name\": \"VM_LIMIT\",\n            \"value\": \"2000000000\"\n        },\n        {\n            \"name\": \"ENABLE_ACTIONS\",\n            \"value\": true\n        }\n    ],\n    \"credential\": {\n        \"name\": \"vSphere adapter credential\",\n        \"credentialKindKey\": \"PRINCIPALCREDENTIAL\",\n        \"adapterKindKey\": \"VMWARE\",\n        \"fields\": [\n            {\n                \"name\": \"USER\",\n                \"value\": \"administrator@vsphere.local\"\n            },\n            {\n                \"name\": \"PASSWORD\",\n                \"value\": \"VMw@re1!\"\n            }\n        ],\n        \"others\": [],\n        \"otherAttributes\": {}\n    },\n    \"others\": [],\n    \"otherAttributes\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters"
											]
										},
										"description": "Create a VC Adapter using the API.\nCan be done using BASIC Authentication\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nModify the BODY as needed (raw JSON format)"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "3 Adapters, Accounts and Credentials",
					"item": [
						{
							"name": "1 Create NSX-T3.0  Cloud Account",
							"item": [
								{
									"name": "Find the Collector Group ID",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/collectors",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"collectors"
											]
										},
										"description": "Basic Authentication has been re-emabled:  https://kb.vmware.com/s/article/77271\nThe \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Find the resources of the Collector Group ID you want to use",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  6e143a16-d67e-4863-8b81-dcc7c5d72e09::407b8217-85c9-48d9-b30c-ff4dfc2fbcad",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters",
												"1b27552f-6a20-41cf-8b7e-c9dcba0ffda1",
												"resources"
											]
										},
										"description": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources\n1b27552f-6a20-41cf-8b7e-c9dcba0ffda1 = vCenter Cloud Account adapter\nresources = all the resources you can configure when setting up the \"vCenter Cloud Account\"\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Create the NSX-T Cloud Account + Credential",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "vRealizeOpsToken  {{YourToken}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"nsxmgr-adapter\",\n    \"description\": \"NSX-T adapter description\",\n    \"collectorGroupId\": \"f81e51de-5101-4c10-af6f-f9cd9cf7b77a\",\n    \"adapterKindKey\": \"NSXTAdapter\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"NSXTHOST\",\n            \"value\": \"{{NSXManager-fqdn}}\"\n        },\n        {\n            \"name\": \"VMEntityVCID\",\n            \"value\": \"false\"\n        }\n        \n    ],\n    \"credential\": {\n        \"name\": \"NSX-T credential\",\n        \"credentialKindKey\": \"NSXTCREDENTIAL\",\n        \"adapterKindKey\": \"NSXTAdapter\",\n        \"fields\": [\n            {\n                \"name\": \"USERNAME\",\n                \"value\": \"{{NSX admin}}\"\n            },\n            {\n                \"name\": \"PASSWORD\",\n                \"value\": \"{{NSX Admin Password}}\"\n            }\n        ],\n        \"others\": [],\n        \"otherAttributes\": {}\n    },\n    \"others\": [],\n    \"otherAttributes\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters"
											]
										},
										"description": "Create a NSX-T Cloud Account and the credential needed, using the API.\nCan be done using BASIC Authentication\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nModify the BODY as needed (raw JSON format)"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "2 Create vIDM 332 Adapter",
							"item": [
								{
									"name": "Find the Collector Group ID Copy",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/collectors",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"collectors"
											]
										},
										"description": "Basic Authentication has been re-emabled:  https://kb.vmware.com/s/article/77271\nThe \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Find the resources of the Collector Group ID you want to use",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters",
												"1b27552f-6a20-41cf-8b7e-c9dcba0ffda1",
												"resources"
											]
										},
										"description": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources\n1b27552f-6a20-41cf-8b7e-c9dcba0ffda1 = vCenter Cloud Account adapter\nresources = all the resources you can configure when setting up the \"vCenter Cloud Account\"\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Create the vIDM332 adapter and credentials",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "vRealizeOpsToken  6e143a16-d67e-4863-8b81-dcc7c5d72e09::7cb07419-644c-46e8-9306-491486f2b030"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"vIDM-adapter\",\n    \"description\": \"vIDM adapter description\",\n    \"collectorGroupId\": \"{{YourCollectorGroupID}}\",\n    \"adapterKindKey\": \"IdentityManagerAdapter\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"vIDMHost\",\n            \"value\": \"{{vIDM-fqdn}}\"\n        }\n        \n    ],\n    \"credential\": {\n        \"name\": \"vIDM-credentials\",\n        \"credentialKindKey\": \"IDENTITYMANAGERCREDENTIAL\",\n        \"adapterKindKey\": \"IdentityManagerAdapter\",\n        \"fields\": [\n            {\n                \"name\": \"USERNAME\",\n                \"value\": \"{{Your vIDM User}}\"\n            },\n            {\n                \"name\": \"PASSWORD\",\n                \"value\": \"Your vIDM User Password\"\n            }\n        ],\n        \"others\": [],\n        \"otherAttributes\": {}\n    },\n    \"others\": [],\n    \"otherAttributes\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters/",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters",
												""
											]
										},
										"description": "https://{{vrops}}/suite-api/api/adapters/\r\n\r\nThe vIDM Management Pack 1.1 must be installed before configuring the vIDM adapter.\r\n\r\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\".\r\n\r\nModify the BODY as needed (raw JSON format)"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "4 Integrations",
					"item": [
						{
							"name": "1 Create vRLI8.1 Integration",
							"item": [
								{
									"name": "Find the Collector Group ID",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authentication",
												"value": "vRealizeOpsToken  6e143a16-d67e-4863-8b81-dcc7c5d72e09::407b8217-85c9-48d9-b30c-ff4dfc2fbcad",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/collectors",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"collectors"
											]
										},
										"description": "Basic Authentication has been re-emabled:  https://kb.vmware.com/s/article/77271\nThe \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Find the resources of the Collector Group ID you want to use",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  6e143a16-d67e-4863-8b81-dcc7c5d72e09::407b8217-85c9-48d9-b30c-ff4dfc2fbcad",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters",
												"1b27552f-6a20-41cf-8b7e-c9dcba0ffda1",
												"resources"
											]
										},
										"description": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources\n1b27552f-6a20-41cf-8b7e-c9dcba0ffda1 = vCenter Cloud ccount adapter\nresources = all the resources you can configure when setting up the \"vCenter Cloud Account\"\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Create the vRLI81 Integration",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "vRealizeOpsToken 6e143a16-d67e-4863-8b81-dcc7c5d72e09::527ee7d7-17cd-4382-a06c-2ebb1f16fe0a"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"IntegratedAccount_LogInsightAdapter\",\n    \"description\": \"IntegratedAccount for the LogInsight Adapter \",\n    \"collectorGroupId\": \"{{YourCollectorGroupID}}\",\n    \"adapterKindKey\": \"LogInsightAdapter\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"LOGINSIGHTURL\",\n            \"value\": \"{{vRLI-fqdn}}\"\n        },\n        {\n            \"name\": \"IS_SINGLETON\",\n            \"value\": true\n        }\n    ]\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://vrops-api.vmusketeers.local/suite-api/api/adapters",
											"protocol": "https",
											"host": [
												"vrops-api",
												"vmusketeers",
												"local"
											],
											"path": [
												"suite-api",
												"api",
												"adapters"
											]
										},
										"description": "Create a vRLI81 Integration , using the API.\nCan be done using BASIC Authentication\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nModify the BODY as needed (raw JSON format)"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "2 Create vRA8.1 Integration",
							"item": [
								{
									"name": "Find the Collector Group ID",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/collectors",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"collectors"
											]
										},
										"description": "Basic Authentication has been re-emabled:  https://kb.vmware.com/s/article/77271\nThe \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Find the resources of the Collector Group ID you want to use",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters",
												"1b27552f-6a20-41cf-8b7e-c9dcba0ffda1",
												"resources"
											]
										},
										"description": "https://vrops-api.vmusketeers.local/suite-api/api/adapters/1b27552f-6a20-41cf-8b7e-c9dcba0ffda1/resources\n1b27552f-6a20-41cf-8b7e-c9dcba0ffda1 = vCenter Cloud ccount adapter\nresources = all the resources you can configure when setting up the \"vCenter Cloud Account\"\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\"."
									},
									"response": []
								},
								{
									"name": "Create the vRA81 Integration + Credential",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "vRealizeOpsToken  {{YourToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"IntegratedAccount_CASAdapter\",\n    \"description\": \"vRA81Integration with vROps-API \",\n    \"collectorGroupId\": \"f81e51de-5101-4c10-af6f-f9cd9cf7b77a\",\n    \"adapterKindKey\": \"CASAdapter\",\n    \"resourceIdentifiers\": [\n        {\n            \"name\": \"CASURL\",\n            \"value\": \"{{vRA-fqdn}}\"\n        },\n        {\n            \"name\": \"SUPPORT_AUTODISCOVERY\",\n            \"value\": true\n        }\n    ],\n    \"credential\": {\n        \"name\": \"vRA 81 CAS Credential\",\n        \"credentialKindKey\": \"CMPCREDENTIALS\",\n        \"adapterKindKey\": \"CASAdapter\",\n        \"fields\": [\n            {\n                \"name\": \"USERNAME\",\n                \"value\": \"{{vIDM-User}}\"\n            },\n            {\n                \"name\": \"PASSWORD\",\n                \"value\": \"{{vIDM-password}}\"\n            }\n        ],\n        \"others\": [],\n        \"otherAttributes\": {}\n    },\n    \"others\": [],\n    \"otherAttributes\": {}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{vrops}}/suite-api/api/adapters",
											"protocol": "https",
											"host": [
												"{{vrops}}"
											],
											"path": [
												"suite-api",
												"api",
												"adapters"
											]
										},
										"description": "Create a vRA81 CAS Integration and the credential needed, using the API.\nCan be done using BASIC Authentication\n\nFor token based authentication: In \"Headers\", add the KEY \"Authorization\" and set the value to \"vRealizeOpsToken + TOKEN\". The \"collectorgroup id\" is neccesary to create a new \"cloud account\".\n\nModify the BODY as needed (raw JSON format)"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "Get Users Copy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "applicaiton/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/auth/users?username=frank",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"auth",
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "frank"
								}
							]
						},
						"description": "May also include query such as id, roleName and username"
					},
					"response": []
				}
			],
			"description": "vROps API examples from vExpert Kim Bottu \r\n@Kim_Bottu\r\nhttps://vmusketeers.com/",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Applications and Tiers",
			"item": [
				{
					"name": "Get Container Adapter Instance ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"containerAdapterInstanceId\", jsonData.adapterInstancesInfoDto[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/adapters?adapterKindKey=Container",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"adapters"
							],
							"query": [
								{
									"key": "adapterKindKey",
									"value": "Container"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"applicationObjectId\", jsonData.identifier);",
									"",
									"postman.clearEnvironmentVariable(\"applicationName\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var applicationName = \"Postman\";",
									"postman.setEnvironmentVariable(\"applicationName\", applicationName);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"creationTime\": null,\r\n  \"resourceKey\": {\r\n    \"name\": \"{{applicationName}}\",\r\n    \"adapterKindKey\": \"Container\",\r\n    \"resourceKindKey\": \"BusinessService\",\r\n    \"resourceIdentifiers\": []\r\n  },\r\n  \"resourceStatusStates\": [],\r\n  \"resourceHealth\": null,\r\n  \"resourceHealthValue\": null,\r\n  \"dtEnabled\": true,\r\n  \"monitoringInterval\": 5,\r\n  \"badges\": [],\r\n  \"relatedResources\": [],\r\n  \"identifier\": null\r\n}\r\n"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{containerAdapterInstanceId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"adapters",
								"{{containerAdapterInstanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Collecting Application Object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationObjectId}}/monitoringstate/start",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationObjectId}}",
								"monitoringstate",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Application Tier Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"applicationTierObjectId\", jsonData.identifier);",
									"",
									"postman.clearEnvironmentVariable(\"applicationTierName\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var applicationTierName = \"App\";",
									"postman.setEnvironmentVariable(\"applicationTierName\", applicationTierName);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"creationTime\": null,\r\n  \"resourceKey\": {\r\n    \"name\": \"{{applicationTierName}}\",\r\n    \"adapterKindKey\": \"Container\",\r\n    \"resourceKindKey\": \"Tier\",\r\n    \"resourceIdentifiers\": [\r\n      {\r\n        \"identifierType\": {\r\n          \"name\": \"BS_Tier Name\",\r\n          \"dataType\": \"STRING\",\r\n          \"isPartOfUniqueness\": true\r\n        },\r\n        \"value\": \"{{applicationObjectId}}_{{applicationTierName}}\"\r\n      }\r\n    ]\r\n  },\r\n  \"resourceStatusStates\": [],\r\n  \"resourceHealth\": null,\r\n  \"resourceHealthValue\": null,\r\n  \"dtEnabled\": true,\r\n  \"monitoringInterval\": 5,\r\n  \"badges\": [],\r\n  \"relatedResources\": [],\r\n  \"identifier\": null\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/adapters/{{containerAdapterInstanceId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"adapters",
								"{{containerAdapterInstanceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Collecting Application Tier Object",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationTierObjectId}}/monitoringstate/start",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationTierObjectId}}",
								"monitoringstate",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Make Application Tier Object a child of Application Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"uuids\" : [ \"{{applicationObjectId}}\" ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationTierObjectId}}/relationships/parents",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationTierObjectId}}",
								"relationships",
								"parents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Objects as child of Application Tier Object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "vRealizeOpsToken {{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"uuids\" : [ \"832e49a8-e85d-4777-9a83-1c15b4660ec1\", \"f2c1d832-91e6-44fc-9499-3aff354c199f\" ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/resources/{{applicationTierObjectId}}/relationships/children",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"resources",
								"{{applicationTierObjectId}}",
								"relationships",
								"children"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cost",
			"item": []
		},
		{
			"name": "Credentials",
			"item": [
				{
					"name": "Get Credential Kinds",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/credentialkinds",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"credentialkinds"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Credentials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/credentials",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"credentials"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new vSAN credential instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\" : \"vSAN Creds 1\",\r\n  \"adapterKindKey\" : \"VirtualAndPhysicalSANAdapter\",\r\n  \"credentialKindKey\" : \"VCCredential\",\r\n  \"fields\" : [ {\r\n    \"name\" : \"VCuser\",\r\n    \"value\" : \"root\"\r\n  }, {\r\n    \"name\" : \"VCPassword\",\r\n    \"value\" : \"vrealize\"\r\n  } ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/credentials",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"credentials"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Credential",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/credentials/{{credentialId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"credentials",
								"{{credentialId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Policies (8.4)",
			"item": [
				{
					"name": "Get all policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/policies/",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"policies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply Policy to Groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"warning": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"warning": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\" : \"85db2263-656f-41ae-a009-0dcbad9bb89a\",\r\n  \"groups\" : [ \"624cbdef-a928-4d79-851d-86ad57ac979e\", \"c5554f05-112e-4c55-bdf9-55e85ebc8932\" ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/policies/apply",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"policies",
								"apply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/zip",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/policies/export?id={{policyId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"policies",
								"export"
							],
							"query": [
								{
									"key": "id",
									"value": "{{policyId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Import policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "policy",
									"type": "file",
									"src": "/C:/Users/diasj/Downloads/response.zip"
								},
								{
									"key": "type",
									"value": "application/x-zip-compressed",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/policies/import?forceImport=false",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"policies",
								"import"
							],
							"query": [
								{
									"key": "forceImport",
									"value": "false"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pricing Policies (8.4)",
			"item": [
				{
					"name": "Get all pricing policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/pricing/",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"pricing",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pricing Policy by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/pricing/{{pricingPolicyId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"pricing",
								"{{pricingPolicyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Pricing Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"API Pricing Card\",\r\n    \"createdBy\": \"VROPS\",\r\n    \"chargeModel\": \"PAY_AS_YOU_GO\",\r\n    \"lastUpdateTimestamp\": 0,\r\n    \"meterings\": [\r\n        {\r\n            \"itemName\": \"memory\",\r\n            \"metering\": {\r\n                \"chargePeriod\": \"MONTHLY\",\r\n                \"baseRate\": 10.0,\r\n                \"conditionalBaseRates\": [],\r\n                \"chargeOnPowerState\": \"ONLY_WHEN_POWERED_ON\",\r\n                \"overage\": false,\r\n                \"overageRate\": 0.0,\r\n                \"unit\": \"gb\",\r\n                \"fixedPrice\": 0.0,\r\n                \"chargeBasedOn\": \"USAGE\"\r\n            }\r\n        },\r\n        {\r\n            \"itemName\": \"vcpu\",\r\n            \"metering\": {\r\n                \"chargePeriod\": \"MONTHLY\",\r\n                \"baseRate\": 5.0,\r\n                \"conditionalBaseRates\": [],\r\n                \"chargeOnPowerState\": \"ONLY_WHEN_POWERED_ON\",\r\n                \"overage\": false,\r\n                \"overageRate\": 0.0,\r\n                \"unit\": \"\",\r\n                \"fixedPrice\": 0.0,\r\n                \"chargeBasedOn\": \"USAGE\"\r\n            }\r\n        },\r\n        {\r\n            \"itemName\": \"storage\",\r\n            \"metering\": {\r\n                \"chargePeriod\": \"MONTHLY\",\r\n                \"baseRate\": 1.0,\r\n                \"conditionalBaseRates\": [],\r\n                \"chargeOnPowerState\": \"ALWAYS\",\r\n                \"overage\": false,\r\n                \"overageRate\": 0.0,\r\n                \"unit\": \"gb\",\r\n                \"fixedPrice\": 0.0,\r\n                \"chargeBasedOn\": \"USAGE\"\r\n            }\r\n        }\r\n    ],\r\n    \"namedMeterings\": [\r\n        {\r\n            \"itemName\": \"guestOSs\",\r\n            \"meterings\": [\r\n                {\r\n                    \"name\": \"VMware Photon OS (64-bit)\",\r\n                    \"metering\": {\r\n                        \"chargePeriod\": \"MONTHLY\",\r\n                        \"baseRate\": 2.0,\r\n                        \"conditionalBaseRates\": [],\r\n                        \"chargeOnPowerState\": \"ALWAYS\",\r\n                        \"overage\": false,\r\n                        \"overageRate\": 0.0,\r\n                        \"fixedPrice\": 0.0,\r\n                        \"chargeBasedOn\": \"USAGE\"\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"CentOS 8 (64-bit)\",\r\n                    \"metering\": {\r\n                        \"chargePeriod\": \"MONTHLY\",\r\n                        \"baseRate\": 2.0,\r\n                        \"conditionalBaseRates\": [],\r\n                        \"chargeOnPowerState\": \"ALWAYS\",\r\n                        \"overage\": false,\r\n                        \"overageRate\": 0.0,\r\n                        \"fixedPrice\": 0.0,\r\n                        \"chargeBasedOn\": \"USAGE\"\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"Microsoft Windows Server 2016 or later (64-bit)\",\r\n                    \"metering\": {\r\n                        \"chargePeriod\": \"MONTHLY\",\r\n                        \"baseRate\": 5.0,\r\n                        \"conditionalBaseRates\": [],\r\n                        \"chargeOnPowerState\": \"ALWAYS\",\r\n                        \"overage\": false,\r\n                        \"overageRate\": 0.0,\r\n                        \"fixedPrice\": 0.0,\r\n                        \"chargeBasedOn\": \"USAGE\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"tagBasedMeterings\": [\r\n        {\r\n            \"itemName\": \"vmTags\",\r\n            \"meterings\": [\r\n                {\r\n                    \"key\": \"Antivirus\",\r\n                    \"value\": \"Yes\",\r\n                    \"metering\": {\r\n                        \"chargePeriod\": \"MONTHLY\",\r\n                        \"baseRate\": 5.0,\r\n                        \"conditionalBaseRates\": [],\r\n                        \"chargeOnPowerState\": \"ALWAYS\",\r\n                        \"overage\": false,\r\n                        \"overageRate\": 0.0,\r\n                        \"fixedPrice\": 0.0,\r\n                        \"chargeBasedOn\": \"USAGE\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"unconditionalMeterings\": [\r\n        {\r\n            \"itemName\": \"fixedPrice\",\r\n            \"unconditionalMetering\": {\r\n                \"rate\": 10.0,\r\n                \"chargePeriod\": \"MONTHLY\"\r\n            }\r\n        }\r\n    ],\r\n    \"oneTimeMeterings\": [\r\n        {\r\n            \"itemName\": \"vmCreation\",\r\n            \"oneTimeMetering\": {\r\n                \"oneTimeFixedPrice\": 50.0\r\n            }\r\n        }\r\n    ],\r\n    \"tagBasedOneTimeMeterings\": [],\r\n    \"tagBasedPolicyRefs\": [],\r\n    \"tagBasedRateFactors\": [\r\n        {\r\n            \"itemName\": \"vmTagsRateFactor\",\r\n            \"rateFactors\": [\r\n                {\r\n                    \"key\": \"Backup\",\r\n                    \"value\": \"Yes\",\r\n                    \"rateFactor\": {\r\n                        \"contextMeteringItem\": \"storage\",\r\n                        \"rateFactor\": 2.0\r\n                    }\r\n                },\r\n                {\r\n                    \"key\": \"DR\",\r\n                    \"value\": \"Yes\",\r\n                    \"rateFactor\": {\r\n                        \"contextMeteringItem\": \"*\",\r\n                        \"rateFactor\": 3.0\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/pricing",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"pricing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Pricing Policy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"bffbda36-8f49-4999-9c8c-973026d49d06\",\r\n    \"name\": \"API Pricing Card\",\r\n    \"createdBy\": \"VROPS\",\r\n    \"chargeModel\": \"PAY_AS_YOU_GO\",\r\n    \"lastUpdateTimestamp\": 1617140588624,\r\n    \"meterings\": [\r\n        {\r\n            \"itemName\": \"memory\",\r\n            \"metering\": {\r\n                \"chargePeriod\": \"MONTHLY\",\r\n                \"baseRate\": 20.0,\r\n                \"conditionalBaseRates\": [],\r\n                \"chargeOnPowerState\": \"ONLY_WHEN_POWERED_ON\",\r\n                \"overage\": false,\r\n                \"overageRate\": 0.0,\r\n                \"unit\": \"gb\",\r\n                \"fixedPrice\": 0.0,\r\n                \"chargeBasedOn\": \"USAGE\"\r\n            }\r\n        },\r\n        {\r\n            \"itemName\": \"vcpu\",\r\n            \"metering\": {\r\n                \"chargePeriod\": \"MONTHLY\",\r\n                \"baseRate\": 15.0,\r\n                \"conditionalBaseRates\": [],\r\n                \"chargeOnPowerState\": \"ONLY_WHEN_POWERED_ON\",\r\n                \"overage\": false,\r\n                \"overageRate\": 0.0,\r\n                \"unit\": \"\",\r\n                \"fixedPrice\": 0.0,\r\n                \"chargeBasedOn\": \"USAGE\"\r\n            }\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/pricing",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"pricing"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pricing Policy History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/pricing/{{pricingPolicyId}}/history",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"pricing",
								"{{pricingPolicyId}}",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Pricing Policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{bearerToken}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://{{vrops}}/suite-api/api/pricing/{{pricingPolicyId}}",
							"protocol": "https",
							"host": [
								"{{vrops}}"
							],
							"path": [
								"suite-api",
								"api",
								"pricing",
								"{{pricingPolicyId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "vrops",
			"value": ""
		},
		{
			"key": "user",
			"value": ""
		},
		{
			"key": "pass",
			"value": ""
		},
		{
			"key": "rolePayload",
			"value": ""
		}
	]
}
